#!/usr/bin/env bash

me=${BASH_SOURCE[0]}
myname=$(basename "${me%-*}")
[ -L "$me" ] && me=$(readlink -f "$me")
here=$(cd "$(dirname "$me")" && pwd)
usage() { # {{{
    cat <<-EOT
    Usage: $0 <options> [ARGS]
        Options:
          -n NAME - The name of the container to start
          -d DB   - The db dir in ./db/
          -h      - Show usage

          ARGS are passed to docker / podman as arguments
EOT
} # }}}

die() { # {{{
    local -i code
    code=$1
    shift
    echo "Error! => $*" >&2
    echo >&2
    usage >&2
    # shellcheck disable=SC2086
    exit $code
} # }}}

while getopts :hn:d: opt # {{{
do 
    case $opt in
        n)
            name=$OPTARG
            ;;
        d)
            db=$OPTARG
            ;;
        h) 
            usage
            exit
            ;;
        \?) 
            die 10 "Invalid option '${OPTARG}'"
            ;;
        :) 
            die 27 "Option ${OPTARG} requires an argument"
            ;;
    esac
done # }}}

shift $((OPTIND-1))
: "${name:=slamd}"

$myname build . -f Dockerfile.tmux -t "$name-tmux" -t "bougyman/$name-tmux"
id=$($myname run -d --rm "$name-tmux")
$myname cp "$id":/usr/local/bin/tmux usr/local/bin/tmux
$myname container stop "$id"

set -x
$myname build . -f Dockerfile.slamd-server -t "$name-slamd-server" -t "bougyman/$name-slamd-server"
id=$($myname run -d --rm "$name-slamd-server")
$myname cp "$id":/usr/src/slamd/build/package/slamd usr/local/slamd
$myname container stop "$id"

: "${db:=empty}"
dbdir="$here/db/$db"
[ -d "${dbdir}" ] || mkdir -vp "${dbdir}"

$myname build . -t "$name" "@$"
# vim: set foldmethod=marker et ts=4 sts=4 sw=4 :
